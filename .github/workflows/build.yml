name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Package Plugin
      run: |
        mkdir -p jellyfin-plugin-audiotagger_${{ github.sha }}
        cp bin/Release/net8.0/Jellyfin.Plugin.AudioTagger.dll jellyfin-plugin-audiotagger_${{ github.sha }}/
        cp meta.json jellyfin-plugin-audiotagger_${{ github.sha }}/
        
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: jellyfin-plugin-audiotagger-${{ github.sha }}
        path: jellyfin-plugin-audiotagger_${{ github.sha }}/
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Build Release
      run: |
        dotnet build --configuration Release
        mkdir -p jellyfin-plugin-audiotagger_${GITHUB_REF#refs/tags/v}
        cp bin/Release/net8.0/Jellyfin.Plugin.AudioTagger.dll jellyfin-plugin-audiotagger_${GITHUB_REF#refs/tags/v}/
        cp meta.json jellyfin-plugin-audiotagger_${GITHUB_REF#refs/tags/v}/
        zip -r jellyfin-plugin-audiotagger_${GITHUB_REF#refs/tags/v}.zip jellyfin-plugin-audiotagger_${GITHUB_REF#refs/tags/v}/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: jellyfin-plugin-audiotagger_*.zip
        draft: false
        prerelease: false
